}
model <- naiveBayes(formul,data=data3)
prediction <- predict(object=model,newdata=data3)
tempdf <- data.frame("test" = data3$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf), 2)
global <- sum(tempdf[1,1],tempdf[2,2])
if ((median(resultat) >= bornage1)&(median(resultat2) <= bornage2)&(global>=bornage3)){
#if (resultat4 < bornage4){
my_i_model <- my_i
vari_model <- mynames
modelG <- naiveBayes(Defaut~.,data=data3)
formule <- paste0("Defaut~",paste(colnames(data3)[which(colnames(data3)!="Defaut")],collapse="+"))
formule <- formula(formule)
print(formule)
#	bornage1 <- median(resultat)
#	bornage2 <- median(resultat2)
#	bornage3 <- global
#	MYnames <- mynames
cat("Prévision médiane : ",median(resultat),"\n")
cat("Prévision inférieure 95% : ",quantile(resultat,probs=0.05),"\n")
prediction <- predict(model,dt)
tempdf <- data.frame("test" = dt$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2) ; print("Prédiction : ")
#	pr
}}
bornage1 <- 0 ; bornage2 <- 1 ; bornage3 <- 0 ; bornage4 <- 1000
Y <- "Defaut" ; nvar <- 3
'%notin%' <- Negate('%in%')
for (alea in 1:500) {
if (alea==1) {proba_var <- rep(1,ncol(dt)) }
rep_var <- c()
for (i in which(colnames(dt)%notin%Y)) {
rep_var <- c(rep_var,rep(i,proba_var[i]))
}
nb <- c()
for (i in 1:nvar) {
nb <- c(nb,  rep(i,factorial(ncol(dt))/factorial(ncol(dt)-i)) )
}
i <- 0
nb_temp <- sample(nb,1) ; my_i <- c()
while (i < nb_temp){
my_i <- unique(c(my_i,sample(rep_var,1)))
i <- length(my_i)
}
#mynames <- colnames(dt)[my_i]
#formula <- paste0(Y,"~",paste(mynames,collapse="+"))
#formula <- as.formula(formula)
#mynames <- union(mynames,"Defaut")
#data3 <- dt[mynames]
data3 <- cbind(dt[Y],dt[my_i]) ; colnames(data3)[1]<-Y
data3[,1] <- as.factor(data3[,1]) # Mettre en facteur
formul <- formula(paste(Y,"~."))
reg <- glm(formul,data=data3,family=binomial(logit))
reg2 <- drop1(reg, test="F")
new_proba <- ceiling(log10(unlist(reg2[5])[-1]))
new_proba [which(is.na(new_proba))]<-1
proba_var[my_i] <- proba_var[my_i] -new_proba+rep(1,length(new_proba))
resultat <- c() ; resultat2 <- c() ; resultat3 <- c() ; resultat4 <- c()
for (i in 1:500) {
apprentissage <- sample(1:nrow(data3),replace=T)
test <- c()
test <- setdiff(1:nrow(data3),apprentissage)
if ((length(test)>0)&(length(unique(data3$Defaut[apprentissage]))==2)&(min(table(data3$Defaut[test]))>4)&(min(table(data3$Defaut[apprentissage]))>4)) {
model <- naiveBayes(Defaut~.,data=data3[apprentissage,])
prediction <- predict(object=model,newdata=data3[test,])
tempdf <- data.frame("test" = data3$Defaut[test],prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2)
resultat <- c(resultat,sum(tempdf[1,1],tempdf[2,2]))
resultat2 <- c(resultat2,tempdf[2,1])
}
}
model <- naiveBayes(formul,data=data3)
prediction <- predict(object=model,newdata=data3)
tempdf <- data.frame("test" = data3$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf), 2)
global <- sum(tempdf[1,1],tempdf[2,2])
if ((median(resultat) >= bornage1)&(median(resultat2) <= bornage2)&(global>=bornage3)){
#if (resultat4 < bornage4){
my_i_model <- my_i
vari_model <- mynames
modelG <- naiveBayes(Defaut~.,data=data3)
formule <- paste0("Defaut~",paste(colnames(data3)[which(colnames(data3)!="Defaut")],collapse="+"))
formule <- formula(formule)
print(formule)
bornage1 <- median(resultat)
bornage2 <- median(resultat2)
bornage3 <- global
MYnames <- mynames
cat("Prévision médiane : ",median(resultat),"\n")
cat("Prévision inférieure 95% : ",quantile(resultat,probs=0.05),"\n")
prediction <- predict(model,dt)
tempdf <- data.frame("test" = dt$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2) ; print("Prédiction : ")
#	pr
}}
bornage1 <- 0 ; bornage2 <- 1 ; bornage3 <- 0 ; bornage4 <- 1000
Y <- "Defaut" ; nvar <- 3
'%notin%' <- Negate('%in%')
for (alea in 1:500) {
if (alea==1) {proba_var <- rep(1,ncol(dt)) }
rep_var <- c()
for (i in which(colnames(dt)%notin%Y)) {
rep_var <- c(rep_var,rep(i,proba_var[i]))
}
nb <- c()
for (i in 1:nvar) {
nb <- c(nb,  rep(i,factorial(ncol(dt))/factorial(ncol(dt)-i)) )
}
i <- 0
nb_temp <- sample(nb,1) ; my_i <- c()
while (i < nb_temp){
my_i <- unique(c(my_i,sample(rep_var,1)))
i <- length(my_i)
}
#mynames <- colnames(dt)[my_i]
#formula <- paste0(Y,"~",paste(mynames,collapse="+"))
#formula <- as.formula(formula)
#mynames <- union(mynames,"Defaut")
#data3 <- dt[mynames]
data3 <- cbind(dt[Y],dt[my_i]) ; colnames(data3)[1]<-Y
data3[,1] <- as.factor(data3[,1]) # Mettre en facteur
formul <- formula(paste(Y,"~."))
reg <- glm(formul,data=data3,family=binomial(logit))
reg2 <- drop1(reg, test="F")
new_proba <- ceiling(log10(unlist(reg2[5])[-1]))
new_proba [which(is.na(new_proba))]<-1
proba_var[my_i] <- proba_var[my_i] -new_proba+rep(1,length(new_proba))
resultat <- c() ; resultat2 <- c() ; resultat3 <- c() ; resultat4 <- c()
for (i in 1:500) {
apprentissage <- sample(1:nrow(data3),replace=T)
test <- c()
test <- setdiff(1:nrow(data3),apprentissage)
if ((length(test)>0)&(length(unique(data3$Defaut[apprentissage]))==2)&(min(table(data3$Defaut[test]))>4)&(min(table(data3$Defaut[apprentissage]))>4)) {
model <- naiveBayes(Defaut~.,data=data3[apprentissage,])
prediction <- predict(object=model,newdata=data3[test,])
tempdf <- data.frame("test" = data3$Defaut[test],prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2)
resultat <- c(resultat,sum(tempdf[1,1],tempdf[2,2]))
resultat2 <- c(resultat2,tempdf[2,1])
}
}
model <- naiveBayes(formul,data=data3)
prediction <- predict(object=model,newdata=data3)
tempdf <- data.frame("test" = data3$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf), 2)
global <- sum(tempdf[1,1],tempdf[2,2])
if ((median(resultat) >= bornage1)&(median(resultat2) <= bornage2)&(global>=bornage3)){
#if (resultat4 < bornage4){
my_i_model <- my_i
vari_model <- mynames
modelG <- naiveBayes(Defaut~.,data=data3)
formule <- paste0("Defaut~",paste(colnames(data3)[which(colnames(data3)!="Defaut")],collapse="+"))
formule <- formula(formule)
print(formule)
bornage1 <- median(resultat)
bornage2 <- median(resultat2)
bornage3 <- global
MYnames <- mynames
cat("Prévision médiane : ",median(resultat),"\n")
cat("Prévision inférieure 95% : ",quantile(resultat,probs=0.05),"\n")
prediction <- predict(model,dt)
tempdf <- data.frame("test" = dt$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2) ; print("Prédiction : ")
print(tempdf)
}}
reg2
global
bornage1
bornage2
resultat2
median(resultat2)
median(resultat)
bornage1 <- 0 ; bornage2 <- 1 ; bornage3 <- 0 ; bornage4 <- 1000
Y <- "Defaut" ; nvar <- 3
'%notin%' <- Negate('%in%')
for (alea in 1:500) {
if (alea==1) {proba_var <- rep(1,ncol(dt)) }
rep_var <- c()
for (i in which(colnames(dt)%notin%Y)) {
rep_var <- c(rep_var,rep(i,proba_var[i]))
}
nb <- c()
for (i in 1:nvar) {
nb <- c(nb,  rep(i,factorial(ncol(dt))/factorial(ncol(dt)-i)) )
}
i <- 0
nb_temp <- sample(nb,1) ; my_i <- c()
while (i < nb_temp){
my_i <- unique(c(my_i,sample(rep_var,1)))
i <- length(my_i)
}
#mynames <- colnames(dt)[my_i]
#formula <- paste0(Y,"~",paste(mynames,collapse="+"))
#formula <- as.formula(formula)
#mynames <- union(mynames,"Defaut")
#data3 <- dt[mynames]
data3 <- cbind(dt[Y],dt[my_i]) ; colnames(data3)[1]<-Y
data3[,1] <- as.factor(data3[,1]) # Mettre en facteur
formul <- formula(paste(Y,"~."))
reg <- glm(formul,data=data3,family=binomial(logit))
reg2 <- drop1(reg, test="F")
new_proba <- ceiling(log10(unlist(reg2[5])[-1]))
new_proba [which(is.na(new_proba))]<-1
proba_var[my_i] <- proba_var[my_i] -new_proba+rep(1,length(new_proba))
resultat <- c() ; resultat2 <- c() ; resultat3 <- c() ; resultat4 <- c()
for (i in 1:500) {
apprentissage <- sample(1:nrow(data3),replace=T)
test <- c()
test <- setdiff(1:nrow(data3),apprentissage)
if ((length(test)>0)&(length(unique(data3$Defaut[apprentissage]))==2)&(min(table(data3$Defaut[test]))>4)&(min(table(data3$Defaut[apprentissage]))>4)) {
model <- naiveBayes(Defaut~.,data=data3[apprentissage,])
prediction <- predict(object=model,newdata=data3[test,])
tempdf <- data.frame("test" = data3$Defaut[test],prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2)
resultat <- c(resultat,sum(tempdf[1,1],tempdf[2,2]))
resultat2 <- c(resultat2,tempdf[2,1])
}
}
model <- naiveBayes(formul,data=data3)
prediction <- predict(object=model,newdata=data3)
tempdf <- data.frame("test" = data3$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf), 2)
global <- sum(tempdf[1,1],tempdf[2,2])
if ((median(resultat) >= bornage1)&(median(resultat2) <= bornage2)&(global>=bornage3)){
#if (resultat4 < bornage4){
my_i_model <- my_i
vari_model <- mynames
modelG <- naiveBayes(Defaut~.,data=data3)
formule <- paste0("Defaut~",paste(colnames(data3)[which(colnames(data3)!="Defaut")],collapse="+"))
formule <- formula(formule)
print(formule)
bornage1 <- median(resultat)
bornage2 <- median(resultat2)
bornage3 <- global
MYnames <- mynames
cat("Prévision médiane : ",median(resultat),"\n")
cat("Prévision inférieure 95% : ",quantile(resultat,probs=0.05),"\n")
prediction <- predict(model,dt)
tempdf <- data.frame("test" = dt$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2) ; print("Prédiction : ")
print(tempdf)
barplot(proba_var,names.arg=colnames(dt),cex.arg=0.5 )
}}
bornage1 <- 0 ; bornage2 <- 1 ; bornage3 <- 0 ; bornage4 <- 1000
Y <- "Defaut" ; nvar <- 3
'%notin%' <- Negate('%in%')
for (alea in 1:500) {
if (alea==1) {proba_var <- rep(10,ncol(dt)) }
rep_var <- c()
for (i in which(colnames(dt)%notin%Y)) {
rep_var <- c(rep_var,rep(i,proba_var[i]))
}
nb <- c()
for (i in 1:nvar) {
nb <- c(nb,  rep(i,factorial(ncol(dt))/factorial(ncol(dt)-i)) )
}
i <- 0
nb_temp <- sample(nb,1) ; my_i <- c()
while (i < nb_temp){
my_i <- unique(c(my_i,sample(rep_var,1)))
i <- length(my_i)
}
#mynames <- colnames(dt)[my_i]
#formula <- paste0(Y,"~",paste(mynames,collapse="+"))
#formula <- as.formula(formula)
#mynames <- union(mynames,"Defaut")
#data3 <- dt[mynames]
data3 <- cbind(dt[Y],dt[my_i]) ; colnames(data3)[1]<-Y
data3[,1] <- as.factor(data3[,1]) # Mettre en facteur
formul <- formula(paste(Y,"~."))
reg <- glm(formul,data=data3,family=binomial(logit))
reg2 <- drop1(reg, test="F")
new_proba <- ceiling(log10(unlist(reg2[5])[-1]))
new_proba [which(is.na(new_proba))]<-1
proba_var[my_i] <- proba_var[my_i] -new_proba+rep(1,length(new_proba))
resultat <- c() ; resultat2 <- c() ; resultat3 <- c() ; resultat4 <- c()
for (i in 1:500) {
apprentissage <- sample(1:nrow(data3),replace=T)
test <- c()
test <- setdiff(1:nrow(data3),apprentissage)
if ((length(test)>0)&(length(unique(data3$Defaut[apprentissage]))==2)&(min(table(data3$Defaut[test]))>4)&(min(table(data3$Defaut[apprentissage]))>4)) {
model <- naiveBayes(Defaut~.,data=data3[apprentissage,])
prediction <- predict(object=model,newdata=data3[test,])
tempdf <- data.frame("test" = data3$Defaut[test],prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2)
resultat <- c(resultat,sum(tempdf[1,1],tempdf[2,2]))
resultat2 <- c(resultat2,tempdf[2,1])
}
}
model <- naiveBayes(formul,data=data3)
prediction <- predict(object=model,newdata=data3)
tempdf <- data.frame("test" = data3$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf), 2)
global <- sum(tempdf[1,1],tempdf[2,2])
if ((median(resultat) >= bornage1)&(median(resultat2) <= bornage2)&(global>=bornage3)){
#if (resultat4 < bornage4){
my_i_model <- my_i
vari_model <- mynames
modelG <- naiveBayes(Defaut~.,data=data3)
formule <- paste0("Defaut~",paste(colnames(data3)[which(colnames(data3)!="Defaut")],collapse="+"))
formule <- formula(formule)
print(formule)
bornage1 <- median(resultat)
bornage2 <- median(resultat2)
bornage3 <- global
MYnames <- mynames
cat("Prévision médiane : ",median(resultat),"\n")
cat("Prévision inférieure 95% : ",quantile(resultat,probs=0.05),"\n")
prediction <- predict(model,dt)
tempdf <- data.frame("test" = dt$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2) ; print("Prédiction : ")
print(tempdf)
barplot(proba_var,names.arg=colnames(dt),cex.arg=0.5 )
}}
bornage1 <- 0 ; bornage2 <- 1 ; bornage3 <- 0 ; bornage4 <- 1000
Y <- "Defaut" ; nvar <- 3
'%notin%' <- Negate('%in%')
for (alea in 1:500) {
if (alea==1) {proba_var <- rep(10,ncol(dt)) }
rep_var <- c()
for (i in which(colnames(dt)%notin%Y)) {
rep_var <- c(rep_var,rep(i,proba_var[i]))
}
nb <- c()
for (i in 1:nvar) {
nb <- c(nb,  rep(i,factorial(ncol(dt))/factorial(ncol(dt)-i)) )
}
i <- 0
nb_temp <- sample(nb,1) ; my_i <- c()
while (i < nb_temp){
my_i <- unique(c(my_i,sample(rep_var,1)))
i <- length(my_i)
}
#mynames <- colnames(dt)[my_i]
#formula <- paste0(Y,"~",paste(mynames,collapse="+"))
#formula <- as.formula(formula)
#mynames <- union(mynames,"Defaut")
#data3 <- dt[mynames]
data3 <- cbind(dt[Y],dt[my_i]) ; colnames(data3)[1]<-Y
data3[,1] <- as.factor(data3[,1]) # Mettre en facteur
formul <- formula(paste(Y,"~."))
reg <- glm(formul,data=data3,family=binomial(logit))
reg2 <- drop1(reg, test="F")
new_proba <- ceiling(log10(unlist(reg2[5])[-1]))
new_proba [which(is.na(new_proba))]<-1
proba_var[my_i] <- proba_var[my_i] -new_proba+rep(1,length(new_proba))
resultat <- c() ; resultat2 <- c() ; resultat3 <- c() ; resultat4 <- c()
limit_boot <- ifelse(alea<400;100;500)
bornage1 <- 0 ; bornage2 <- 1 ; bornage3 <- 0 ; bornage4 <- 1000
Y <- "Defaut" ; nvar <- 3
'%notin%' <- Negate('%in%')
for (alea in 1:500) {
if (alea==1) {proba_var <- rep(10,ncol(dt)) }
rep_var <- c()
for (i in which(colnames(dt)%notin%Y)) {
rep_var <- c(rep_var,rep(i,proba_var[i]))
}
nb <- c()
for (i in 1:nvar) {
nb <- c(nb,  rep(i,factorial(ncol(dt))/factorial(ncol(dt)-i)) )
}
i <- 0
nb_temp <- sample(nb,1) ; my_i <- c()
while (i < nb_temp){
my_i <- unique(c(my_i,sample(rep_var,1)))
i <- length(my_i)
}
#mynames <- colnames(dt)[my_i]
#formula <- paste0(Y,"~",paste(mynames,collapse="+"))
#formula <- as.formula(formula)
#mynames <- union(mynames,"Defaut")
#data3 <- dt[mynames]
data3 <- cbind(dt[Y],dt[my_i]) ; colnames(data3)[1]<-Y
data3[,1] <- as.factor(data3[,1]) # Mettre en facteur
formul <- formula(paste(Y,"~."))
reg <- glm(formul,data=data3,family=binomial(logit))
reg2 <- drop1(reg, test="F")
new_proba <- ceiling(log10(unlist(reg2[5])[-1]))
new_proba [which(is.na(new_proba))]<-1
proba_var[my_i] <- proba_var[my_i] -new_proba+rep(1,length(new_proba))
resultat <- c() ; resultat2 <- c() ; resultat3 <- c() ; resultat4 <- c()
limit_boot <- ifelse(alea<400,100,500)
for (i in 1:limit_boot) {
apprentissage <- sample(1:nrow(data3),replace=T)
test <- c()
test <- setdiff(1:nrow(data3),apprentissage)
if ((length(test)>0)&(length(unique(data3$Defaut[apprentissage]))==2)&(min(table(data3$Defaut[test]))>4)&(min(table(data3$Defaut[apprentissage]))>4)) {
model <- naiveBayes(Defaut~.,data=data3[apprentissage,])
prediction <- predict(object=model,newdata=data3[test,])
tempdf <- data.frame("test" = data3$Defaut[test],prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2)
resultat <- c(resultat,sum(tempdf[1,1],tempdf[2,2]))
resultat2 <- c(resultat2,tempdf[2,1])
}
}
model <- naiveBayes(formul,data=data3)
prediction <- predict(object=model,newdata=data3)
tempdf <- data.frame("test" = data3$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf), 2)
global <- sum(tempdf[1,1],tempdf[2,2])
if ((median(resultat) >= bornage1)&(median(resultat2) <= bornage2)&(global>=bornage3)){
#if (resultat4 < bornage4){
my_i_model <- my_i
vari_model <- mynames
modelG <- naiveBayes(Defaut~.,data=data3)
formule <- paste0("Defaut~",paste(colnames(data3)[which(colnames(data3)!="Defaut")],collapse="+"))
formule <- formula(formule)
print(formule)
bornage1 <- median(resultat)
bornage2 <- median(resultat2)
bornage3 <- global
MYnames <- mynames
cat("Prévision médiane : ",median(resultat),"\n")
cat("Prévision inférieure 95% : ",quantile(resultat,probs=0.05),"\n")
prediction <- predict(model,dt)
tempdf <- data.frame("test" = dt$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2) ; print("Prédiction : ")
print(tempdf)
barplot(proba_var,names.arg=colnames(dt),cex.arg=0.5 )
}}
Y <- "Defaut" ; nvar <- 3
'%notin%' <- Negate('%in%')
iter = 1000 ; base = round(iter/50,0)
for (alea in 1:iter) {
if (alea==1) {proba_var <- rep(base,ncol(dt)) }
rep_var <- c()
for (i in which(colnames(dt)%notin%Y)) {
rep_var <- c(rep_var,rep(i,proba_var[i]))
}
nb <- c()
for (i in 1:nvar) {
nb <- c(nb,  rep(i,factorial(ncol(dt))/factorial(ncol(dt)-i)) )
}
i <- 0
nb_temp <- sample(nb,1) ; my_i <- c()
while (i < nb_temp){
my_i <- unique(c(my_i,sample(rep_var,1)))
i <- length(my_i)
}
#mynames <- colnames(dt)[my_i]
#formula <- paste0(Y,"~",paste(mynames,collapse="+"))
#formula <- as.formula(formula)
#mynames <- union(mynames,"Defaut")
#data3 <- dt[mynames]
data3 <- cbind(dt[Y],dt[my_i]) ; colnames(data3)[1]<-Y
data3[,1] <- as.factor(data3[,1]) # Mettre en facteur
formul <- formula(paste(Y,"~."))
reg <- glm(formul,data=data3,family=binomial(logit))
reg2 <- drop1(reg, test="F")
new_proba <- ceiling(log10(unlist(reg2[5])[-1]))
new_proba [which(is.na(new_proba))]<-1
proba_var[my_i] <- proba_var[my_i] -new_proba+rep(1,length(new_proba))
resultat <- c() ; resultat2 <- c() ; resultat3 <- c() ; resultat4 <- c()
limit_boot <- ifelse(alea<round(quantile(iter,probs=0.9),0),100,500)
for (i in 1:limit_boot) {
apprentissage <- sample(1:nrow(data3),replace=T)
test <- c()
test <- setdiff(1:nrow(data3),apprentissage)
if ((length(test)>0)&(length(unique(data3$Defaut[apprentissage]))==2)&(min(table(data3$Defaut[test]))>4)&(min(table(data3$Defaut[apprentissage]))>4)) {
model <- naiveBayes(Defaut~.,data=data3[apprentissage,])
prediction <- predict(object=model,newdata=data3[test,])
tempdf <- data.frame("test" = data3$Defaut[test],prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2)
resultat <- c(resultat,sum(tempdf[1,1],tempdf[2,2]))
resultat2 <- c(resultat2,tempdf[2,1])
}
}
model <- naiveBayes(formul,data=data3)
prediction <- predict(object=model,newdata=data3)
tempdf <- data.frame("test" = data3$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf), 2)
global <- sum(tempdf[1,1],tempdf[2,2])
if ((median(resultat) >= bornage1)&(median(resultat2) <= bornage2)&(global>=bornage3)){
#if (resultat4 < bornage4){
my_i_model <- my_i
vari_model <- mynames
modelG <- naiveBayes(Defaut~.,data=data3)
formule <- paste0("Defaut~",paste(colnames(data3)[which(colnames(data3)!="Defaut")],collapse="+"))
formule <- formula(formule)
print(formule)
bornage1 <- median(resultat)
bornage2 <- median(resultat2)
bornage3 <- global
MYnames <- mynames
cat("Prévision médiane : ",median(resultat),"\n")
cat("Prévision inférieure 95% : ",quantile(resultat,probs=0.05),"\n")
prediction <- predict(model,dt)
tempdf <- data.frame("test" = dt$Defaut,prediction)
tempdf <- table(tempdf)
tempdf <- round(prop.table(tempdf ), 2) ; print("Prédiction : ")
print(tempdf)
barplot(proba_var,names.arg=colnames(dt),cex.arg=0.5 )
}}
